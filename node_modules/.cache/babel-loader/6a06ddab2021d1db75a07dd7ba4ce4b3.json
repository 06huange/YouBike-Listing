{"ast":null,"code":"var _jsxFileName = \"/Users/eagle/Desktop/Web-App/youbike/src/YouBike.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function YouBike() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"http://localhost:8010/proxy/api/datasets/71CD1490-A2DF-4198-BEF1-318479775E8A/json/preview\").then(res => res.json()).then(result => {\n      setIsLoaded(true); //sort Array based on \"mday\"\n\n      var obj = result;\n      obj.sort((a, b) => b.mday - a.mday);\n      setItems(obj);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://www.google.com/maps/embed/v1/place? key=AIzaSyDId7Y0YTgaQiAMczyNPA8OjJevW92Uh8sq=Eiffel+Tower,Paris+France\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"listing\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: toggleMap,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.snaen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Total: \", item.tot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Available: \", item.sbi]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: convertToDate(item.mday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, item.sno, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n} //convert number to Date Format\n//20210516154847 -> 2021/05/16 15:48:47\n\n_s(YouBike, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = YouBike;\n\nfunction convertToDate(input) {\n  var year = (input / 10000000000).toFixed(0);\n  var month = addLeadingZero((input / 100000000).toFixed(0) % 100);\n  var day = addLeadingZero((input / 1000000).toFixed(0) % 100);\n  var hour = addLeadingZero((input / 10000 % 100).toFixed(0));\n  var min = addLeadingZero((input / 100 % 100).toFixed(0));\n  var sec = addLeadingZero((input % 100).toFixed(0));\n  return year + \"/\" + month + \"/\" + day + \" - \" + hour + \":\" + min + \":\" + sec;\n} //helper function to add leading zero for fixed numeric format\n\n\nfunction addLeadingZero(input) {\n  if (input / 10 < 1) {\n    return \"0\" + input;\n  } else {\n    return input;\n  }\n}\n\nfunction toggleMap() {\n  console.log(\"CLICKED\");\n  return;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"YouBike\");","map":{"version":3,"sources":["/Users/eagle/Desktop/Web-App/youbike/src/YouBike.js"],"names":["React","useState","useEffect","YouBike","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","obj","sort","a","b","mday","message","map","item","toggleMap","snaen","tot","sbi","convertToDate","sno","input","year","toFixed","month","addLeadingZero","day","hour","min","sec","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function YouBike() {\n    const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"http://localhost:8010/proxy/api/datasets/71CD1490-A2DF-4198-BEF1-318479775E8A/json/preview\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          //sort Array based on \"mday\"\n          var obj = result;\n          obj.sort((a,b) => b.mday - a.mday);\n          setItems(obj);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n        )\n  }, [])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div>\n        <iframe src=\"https://www.google.com/maps/embed/v1/place?\n        key=AIzaSyDId7Y0YTgaQiAMczyNPA8OjJevW92Uh8sq=Eiffel+Tower,Paris+France\"></iframe>\n        <ul id=\"listing\">\n          {items.map(item => (\n            <li key={item.sno} onClick={toggleMap}>\n              <ul id=\"item\">\n                  <li>{item.snaen}</li>\n                  <li>Total: {item.tot}</li>\n                  <li>Available: {item.sbi}</li>\n                  <li>{convertToDate(item.mday)}</li>\n              </ul>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\n//convert number to Date Format\n//20210516154847 -> 2021/05/16 15:48:47\nfunction convertToDate(input){\n    var year = (input / 10000000000).toFixed(0);\n    var month = addLeadingZero((input / 100000000).toFixed(0) % 100);\n    var day = addLeadingZero((input / 1000000).toFixed(0) % 100);\n\n    var hour = addLeadingZero(((input / 10000) % 100).toFixed(0));\n    var min = addLeadingZero(((input / 100) % 100).toFixed(0));\n    var sec = addLeadingZero((input % 100).toFixed(0));\n    return(year + \"/\" + month + \"/\" + day + \" - \" + hour + \":\" + min + \":\" + sec);\n}\n\n//helper function to add leading zero for fixed numeric format\nfunction addLeadingZero(input){\n    if(input / 10 < 1){\n        return(\"0\" + input)\n    }\n    else{\n        return input;\n    }\n}\nfunction toggleMap(){\n  console.log(\"CLICKED\")\n  return\n}\n"]},"metadata":{},"sourceType":"module"}